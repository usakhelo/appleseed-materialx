#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\color2.h"
#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\color4.h"
#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\matrix33.h"
#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\vector2.h"
#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\vector4.h"
#include "c:\plugins\appleseed\appleseed-materialx\python-test\..\libraries\stdlib\osl\mx_funcs.h"

#define M_FLOAT_EPS 0.000001
#define true 1
#define false 0
#define BSDF closure color
#define EDF closure color
#define VDF closure color
#define surfaceshader closure color
#define volumeshader closure color
struct displacementshader { vector offset; float scale; };
#define lightshader closure color

//
// Function to transform texture coordinates before texture sampling
//
vector2 mx_get_target_uv(vector2 texcoord)
{
   return texcoord;
}

void IMP_foo(color a, color b, output color o)
{
    color mult1_out = a * b;
    o = mult1_out;
}

shader shader_interface
(
    float dummy = 0.0,
    color foo1_a = color(1, 1, 0),
    color foo1_b = color(0.8, 0.1, 0.1),
    output color foo_test = color(0.0)
)
{
    color foo1_o = color(0.0);
    IMP_foo(foo1_a, foo1_b, foo1_o);
    foo_test = foo1_o;
}
